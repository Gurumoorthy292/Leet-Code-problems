Given the root of a binary tree, return the preorder traversal of its nodes' values.

SOURCE CODE:

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

void preorderHelper(struct TreeNode* root, int* result, int* returnSize) {
    if (root == NULL) return;

    result[(*returnSize)++] = root->val;           // Root
    preorderHelper(root->left, result, returnSize); // Left
    preorderHelper(root->right, result, returnSize);// Right
}

int* preorderTraversal(struct TreeNode* root, int* returnSize) {
    int* result = (int*)malloc(1000 * sizeof(int)); // safer upper bound
    *returnSize = 0;
    preorderHelper(root, result, returnSize);
    return result;
}

OUTPUT:

Example 1:

Input: root = [1,null,2,3]
Output: [1,2,3]

Example 2:

Input: root = [1,2,3,4,5,null,8,null,null,6,7,9]
Output: [1,2,4,5,6,7,3,8,9]

Example 3:

Input: root = []
Output: []

Example 4:

Input: root = [1]
Output: [1]
